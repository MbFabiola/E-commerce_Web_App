# Set server port
server.port=8080
file.upload-dir=src/main/resources/static/images


spring.application.name=backend

# Database Configuration
 spring.datasource.url=jdbc:postgresql://dpg-d0lomgffte5s739npl4g-a.oregon-postgres.render.com:5432/ecomm_db_uppv?user=ecomm_db_uppv_user&password=RkJtbIKullN5HKSVhigxQnqANwfLapCK
spring.datasource.username=ecomm_db_uppv_user
 spring.datasource.password=RkJtbIKullN5HKSVhigxQnqANwfLapCK

#spring.datasource.url=jdbc:postgresql://localhost:5432/ecommerce
#spring.datasource.username=postgres
#spring.datasource.password=123

spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate properties
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update

# Hibernate configuration
spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Use UUID as primary key generator
spring.jpa.properties.hibernate.id.uuid.generator=org.hibernate.id.UUIDGenerator

spring.mvc.cors.allowed-origins=*
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=Content-Type,Authorization
spring.mvc.cors.allow-credentials=true


# Logging Configuration
logging.level.root=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate=INFO
logging.level.com.zaxxer.hikari=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.fabiola.backend=DEBUG